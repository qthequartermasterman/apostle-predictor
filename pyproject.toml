[project]
name = "apostle-predictor"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { email = "andrew@protopia.ai" }
]
requires-python = ">=3.12"
dependencies = [
    "auto-pydantic-cache==1.1.1",
    "beautifulsoup4==4.13.5",
    "httpx==0.28.1",
    "pandas==2.3.2",
    "pydantic==2.11.7",
]

[build-system]
requires = ["uv_build>=0.8.14,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
    "pre-commit==4.0.1",
    "pyrefly==0.32.0",
    "pytest==8.4.2",
    "ruff==0.12.12",
    "ty==0.0.1a20",
]

[tool.ruff]
# Set line length to 100 for better readability with descriptive names
line-length = 100

# Target Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable ALL available rules
select = ["ALL"]
# Exclude only truly inappropriate rules for this project
ignore = [
    # Allow certain naming patterns
    "N999",  # Invalid module name (conflicts with package structure)

    # Allow certain docstring patterns
    "D100",  # Missing docstring in public module (not always needed)
    "D104",  # Missing docstring in public package (not always needed)

    # Allow certain import patterns
    "TCH",   # flake8-type-checking (can be overly aggressive)

    # Allow print statements for CLI output
    "T201",  # print found

    # Allow certain complexity (but keep reasonable limits)
    "PLR0913",  # Too many arguments to function call (sometimes needed)

    # Allow certain patterns in tests
    "S101",   # Use of assert detected (needed in tests)
    "PLR2004", # Magic value used in comparison (common in tests)

    # Allow certain patterns for data science/ML code
    "PD",     # pandas-vet rules (can be overly restrictive for our use case)

    # Allow certain todo patterns
    "FIX002", # Line contains TODO (we want TODOs)
    "TD002",  # Missing author in TODO
    "TD003",  # Missing issue link in TODO

    # Temporary ignores for refactoring
    "ERA001", # Found commented-out code
    "C901",   # Function too complex (temporary while refactoring)
    "PLR0912", # Too many branches (temporary while refactoring)
    "PLR0915", # Too many statements (temporary while refactoring)
    "PLC0415", # Import should be at top level (temporary for test fixes)

    # Ignore rules that conflict with formatter
    "COM812", # Trailing comma missing (conflicts with formatter)
]

[tool.ruff.lint.per-file-ignores]
# Allow certain patterns in test files
"tests/**/*.py" = [
    "ANN",     # Missing type annotations (not critical for tests)
    "D",       # Missing docstrings (not critical for tests)
    "S",       # Security issues (not critical for tests)
    "SLF001",  # Private member accessed (common in tests)
    "E501",    # Line too long (test data can be long)
]

# Allow certain patterns in notebooks
"*.ipynb" = [
    "ALL",     # Skip all checks for notebooks (they're scratch pads)
]

[tool.ruff.lint.pydocstyle]
# Use Google docstring style
convention = "google"

[tool.ruff.lint.isort]
# Configure import sorting
known-first-party = ["apostle_predictor"]
